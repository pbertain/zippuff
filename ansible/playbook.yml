---
- name: Deploy Zippuff USPS API Tool
  hosts: zippuff_servers
  become: yes
  vars_files:
    - vars/main.yml
  
  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
    
    - name: Install required system packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - git
          - curl
          - nginx
        state: present
      when: ansible_os_family == "Debian"
  
  tasks:
    - name: Create application user
      user:
        name: "{{ app_user }}"
        group: "{{ app_group }}"
        system: yes
        shell: /bin/bash
        home: "/home/{{ app_user }}"
        create_home: yes
    
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'
    
    - name: Create logs directory
      file:
        path: "{{ app_dir }}/logs"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'
    
    - name: Copy application files
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}/"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0644'
      with_fileglob:
        - "src/*.py"
        - "requirements.txt"
        - "README.md"
        - "LICENSE"
    
    - name: Copy configuration files
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}/"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0644'
      with_fileglob:
        - "config/*.yaml"
    
    - name: Create Python virtual environment
      pip:
        virtualenv: "{{ app_dir }}/venv"
        virtualenv_command: python3 -m venv
        requirements: "{{ app_dir }}/requirements.txt"
        state: present
        extra_args: --user
    
    - name: Create systemd service file
      template:
        src: templates/zippuff.service.j2
        dest: /etc/systemd/system/zippuff.service
        owner: root
        group: root
        mode: '0644'
      notify: restart zippuff
    
    - name: Create environment file
      template:
        src: templates/environment.j2
        dest: "{{ app_dir }}/.env"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0600'
      notify: restart zippuff
    
    - name: Enable and start zippuff service
      systemd:
        name: zippuff
        enabled: yes
        state: started
        daemon_reload: yes
    
    - name: Configure nginx
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/zippuff
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx
    
    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/zippuff
        dest: /etc/nginx/sites-enabled/zippuff
        state: link
      notify: restart nginx
    
    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx
    
    - name: Configure firewall
      ufw:
        rule: allow
        port: "80"
        proto: tcp
      when: ansible_os_family == "Debian"
    
    - name: Configure firewall for HTTPS
      ufw:
        rule: allow
        port: "443"
        proto: tcp
      when: ansible_os_family == "Debian"
  
  handlers:
    - name: restart zippuff
      systemd:
        name: zippuff
        state: restarted
        daemon_reload: yes
    
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted 